/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package interfaz;

import java.awt.BasicStroke;
import java.awt.Color;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.Point;
import java.awt.Toolkit;
import java.awt.event.*;
import java.awt.geom.QuadCurve2D;
import java.util.ArrayList;
import java.util.Random;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import mundo.Grafo;
import mundo.Nodo;
import mundo.Recorrido;

/**
 *
 * @author Fabian
 */
public class VentanaPrincipal extends javax.swing.JFrame {

    /**
     * Creates new form VentanaPrincipal
     */
    public VentanaPrincipal() {
        initComponents();
        setLocationRelativeTo(null);
        setIconImage(Toolkit.getDefaultToolkit().getImage(this.getClass().getResource("/imagenes/computer.png")));
        setExtendedState(JFrame.MAXIMIZED_BOTH);
        modelo = new Grafo();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        filler1 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 0), new java.awt.Dimension(0, 0), new java.awt.Dimension(32767, 0));
        panelGrafoMat = new javax.swing.JPanel();
        panelGrafo = new javax.swing.JPanel();
        lbTipoGrafo = new javax.swing.JLabel();
        panelMatAdyacencia = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        btnAristasMultiples = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        btnLazos = new javax.swing.JButton();
        btnAristasSimples = new javax.swing.JButton();
        scrollPaneGrafo = new javax.swing.JScrollPane();
        infGrafo = new javax.swing.JPanel();
        btnGradoVertices = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        etqTeorema = new javax.swing.JLabel();
        etqNumeroVertices = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        etqNumeroAristas = new javax.swing.JLabel();
        lb7 = new javax.swing.JLabel();
        etqConexo = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        btnAgregarNodo = new javax.swing.JButton();
        txtEntrada = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        btnAgregarArista = new javax.swing.JButton();
        btnEliminarArista = new javax.swing.JButton();
        btnEliminarNodo = new javax.swing.JButton();
        btnEliminarGrafo = new javax.swing.JButton();
        btnAleatorio = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("GRAFOS FAHOVA");
        setAlwaysOnTop(true);
        setAutoRequestFocus(false);
        setBackground(new java.awt.Color(0, 0, 0));

        panelGrafoMat.setBackground(new java.awt.Color(51, 51, 51));

        panelGrafo.setBackground(new java.awt.Color(255, 244, 255));

        lbTipoGrafo.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        lbTipoGrafo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbTipoGrafo.setText("NO HAY GRAFO");

        javax.swing.GroupLayout panelGrafoLayout = new javax.swing.GroupLayout(panelGrafo);
        panelGrafo.setLayout(panelGrafoLayout);
        panelGrafoLayout.setHorizontalGroup(
            panelGrafoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelGrafoLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lbTipoGrafo, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(173, Short.MAX_VALUE))
        );
        panelGrafoLayout.setVerticalGroup(
            panelGrafoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelGrafoLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lbTipoGrafo, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(436, Short.MAX_VALUE))
        );

        panelMatAdyacencia.setBackground(new java.awt.Color(153, 153, 153));

        jTable1.setAutoCreateRowSorter(true);
        jTable1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jTable1.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(jTable1);

        btnAristasMultiples.setBackground(new java.awt.Color(153, 153, 153));
        btnAristasMultiples.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        btnAristasMultiples.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/boton2.png"))); // NOI18N
        btnAristasMultiples.setText("MULTIPLES    ");
        btnAristasMultiples.setBorder(null);
        btnAristasMultiples.setBorderPainted(false);
        btnAristasMultiples.setContentAreaFilled(false);
        btnAristasMultiples.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnAristasMultiples.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAristasMultiplesActionPerformed(evt);
            }
        });

        jLabel2.setBackground(new java.awt.Color(204, 204, 204));
        jLabel2.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("MATRIZ DE ADYACENCIA");

        btnLazos.setBackground(new java.awt.Color(153, 153, 153));
        btnLazos.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        btnLazos.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/boton2.png"))); // NOI18N
        btnLazos.setText("LAZOS");
        btnLazos.setBorder(null);
        btnLazos.setBorderPainted(false);
        btnLazos.setContentAreaFilled(false);
        btnLazos.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnLazos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLazosActionPerformed(evt);
            }
        });

        btnAristasSimples.setBackground(new java.awt.Color(153, 153, 153));
        btnAristasSimples.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        btnAristasSimples.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/boton2.png"))); // NOI18N
        btnAristasSimples.setText("ARISTAS");
        btnAristasSimples.setBorder(null);
        btnAristasSimples.setBorderPainted(false);
        btnAristasSimples.setContentAreaFilled(false);
        btnAristasSimples.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnAristasSimples.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAristasSimplesActionPerformed(evt);
            }
        });

        infGrafo.setBackground(new java.awt.Color(255, 255, 255));
        infGrafo.setLayout(new javax.swing.BoxLayout(infGrafo, javax.swing.BoxLayout.Y_AXIS));
        scrollPaneGrafo.setViewportView(infGrafo);

        btnGradoVertices.setBackground(new java.awt.Color(153, 153, 153));
        btnGradoVertices.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        btnGradoVertices.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/boton2.png"))); // NOI18N
        btnGradoVertices.setText("G. VERTICES    ");
        btnGradoVertices.setBorder(null);
        btnGradoVertices.setBorderPainted(false);
        btnGradoVertices.setContentAreaFilled(false);
        btnGradoVertices.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnGradoVertices.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGradoVerticesActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelMatAdyacenciaLayout = new javax.swing.GroupLayout(panelMatAdyacencia);
        panelMatAdyacencia.setLayout(panelMatAdyacenciaLayout);
        panelMatAdyacenciaLayout.setHorizontalGroup(
            panelMatAdyacenciaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelMatAdyacenciaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelMatAdyacenciaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelMatAdyacenciaLayout.createSequentialGroup()
                        .addGroup(panelMatAdyacenciaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                            .addComponent(scrollPaneGrafo, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelMatAdyacenciaLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel2)
                        .addGap(137, 137, 137))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelMatAdyacenciaLayout.createSequentialGroup()
                        .addComponent(btnAristasSimples, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnLazos, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnAristasMultiples, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnGradoVertices, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
        );
        panelMatAdyacenciaLayout.setVerticalGroup(
            panelMatAdyacenciaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelMatAdyacenciaLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(panelMatAdyacenciaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnGradoVertices, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAristasSimples, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnLazos, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAristasMultiples, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(scrollPaneGrafo, javax.swing.GroupLayout.DEFAULT_SIZE, 193, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel5.setBackground(new java.awt.Color(244, 67, 54));

        jLabel3.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel3.setText("NUMERO VERTICES:");

        jLabel4.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel4.setText("TEOREMA:");

        etqTeorema.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N

        etqNumeroVertices.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N

        jLabel5.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel5.setText("NUMERO ARISTAS:");

        etqNumeroAristas.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N

        lb7.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        lb7.setText("ES CONEXO:");

        etqConexo.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(etqNumeroAristas, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(etqNumeroVertices, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(etqTeorema, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(lb7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(etqConexo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, 23, Short.MAX_VALUE)
                    .addComponent(etqTeorema, javax.swing.GroupLayout.DEFAULT_SIZE, 23, Short.MAX_VALUE))
                .addGap(9, 9, 9)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(etqNumeroVertices, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 23, Short.MAX_VALUE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 23, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(etqNumeroAristas, javax.swing.GroupLayout.DEFAULT_SIZE, 27, Short.MAX_VALUE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lb7, javax.swing.GroupLayout.DEFAULT_SIZE, 26, Short.MAX_VALUE)
                    .addComponent(etqConexo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel1.setBackground(new java.awt.Color(153, 153, 153));

        btnAgregarNodo.setBackground(new java.awt.Color(33, 150, 243));
        btnAgregarNodo.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        btnAgregarNodo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/boton2.png"))); // NOI18N
        btnAgregarNodo.setText("NODO");
        btnAgregarNodo.setToolTipText("Si deseas ingresar un nodo\n solo escribe el nombre sin utilizar\n el simbolo \" : \"");
        btnAgregarNodo.setBorder(null);
        btnAgregarNodo.setBorderPainted(false);
        btnAgregarNodo.setContentAreaFilled(false);
        btnAgregarNodo.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnAgregarNodo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarNodoActionPerformed(evt);
            }
        });

        txtEntrada.setBackground(new java.awt.Color(174, 182, 191));
        txtEntrada.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        txtEntrada.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtEntrada.setToolTipText("");
        txtEntrada.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        txtEntrada.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtEntradaKeyTyped(evt);
            }
        });

        jPanel3.setBackground(new java.awt.Color(244, 67, 54));
        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setBackground(new java.awt.Color(255, 102, 102));
        jPanel3.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 0, 210, 120));

        btnAgregarArista.setBackground(new java.awt.Color(32, 150, 243));
        btnAgregarArista.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        btnAgregarArista.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/boton2.png"))); // NOI18N
        btnAgregarArista.setText("ARISTA");
        btnAgregarArista.setToolTipText("Para agregar una arista inserte el texto de la forma:\n nombre1_vertice:nombre2_vertice");
        btnAgregarArista.setBorder(null);
        btnAgregarArista.setBorderPainted(false);
        btnAgregarArista.setContentAreaFilled(false);
        btnAgregarArista.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnAgregarArista.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarAristaActionPerformed(evt);
            }
        });

        btnEliminarArista.setBackground(new java.awt.Color(33, 150, 243));
        btnEliminarArista.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        btnEliminarArista.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/boton1.png"))); // NOI18N
        btnEliminarArista.setText("ARISTA    ");
        btnEliminarArista.setToolTipText("Para borrar una arista ingrese: \n nombre1_vertice:nombre2_vertice");
        btnEliminarArista.setBorder(null);
        btnEliminarArista.setBorderPainted(false);
        btnEliminarArista.setContentAreaFilled(false);
        btnEliminarArista.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnEliminarArista.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarAristaActionPerformed(evt);
            }
        });

        btnEliminarNodo.setBackground(new java.awt.Color(255, 255, 255));
        btnEliminarNodo.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        btnEliminarNodo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/boton1.png"))); // NOI18N
        btnEliminarNodo.setText("NODO   ");
        btnEliminarNodo.setToolTipText("Para borrar un nodo solo ingrese el nombre");
        btnEliminarNodo.setActionCommand("");
        btnEliminarNodo.setBorder(null);
        btnEliminarNodo.setBorderPainted(false);
        btnEliminarNodo.setContentAreaFilled(false);
        btnEliminarNodo.setFocusable(false);
        btnEliminarNodo.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnEliminarNodo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarNodoActionPerformed(evt);
            }
        });

        btnEliminarGrafo.setBackground(new java.awt.Color(33, 150, 243));
        btnEliminarGrafo.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        btnEliminarGrafo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/boton1.png"))); // NOI18N
        btnEliminarGrafo.setText("GRAFO    ");
        btnEliminarGrafo.setToolTipText("Click para borrrar todos los nodos");
        btnEliminarGrafo.setBorder(null);
        btnEliminarGrafo.setBorderPainted(false);
        btnEliminarGrafo.setContentAreaFilled(false);
        btnEliminarGrafo.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnEliminarGrafo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarGrafoActionPerformed(evt);
            }
        });

        btnAleatorio.setBackground(new java.awt.Color(32, 150, 243));
        btnAleatorio.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        btnAleatorio.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/boton2.png"))); // NOI18N
        btnAleatorio.setText("ALEATORIO  ");
        btnAleatorio.setToolTipText("Para generar un grafo aleatorio ingrese un numero de nodos");
        btnAleatorio.setBorder(null);
        btnAleatorio.setBorderPainted(false);
        btnAleatorio.setContentAreaFilled(false);
        btnAleatorio.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnAleatorio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAleatorioActionPerformed(evt);
            }
        });

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/1c6716b235863cb53f9b3dbd3aa36ab8-icono-de-signo-de-interrogacion-circulo-rojo (3).png"))); // NOI18N
        jButton1.setToolTipText("<html>Desarrollador: Fabian Vera <Br>\n<Br>Estudiante de Ingenieria de Sistemas</Br>\n<Br></Br>\n----Opciones Basicas del Programa-----</Br>\n<Br>1. Para agregar un nodo ingrese el nombre en el campo de texto click en el boton color verde nodo</Br>\n<Br>2. Para agregar una arista use la notacion: name1vertice:name2vertice click en el boton color verde arista</Br>\n<Br>3. Para crear un grafo aleatorio ingrese un numero n en el area de texto click boton color verde aleatorio </Br>\n<Br>4. Para eliminar un nodo ingrese el nombre en el area de texto click boton rojo nodo</Br>\n<Br>5. Para eliminar una arista use la notacion: name1:vertice:name2vertice click boton rojo arista</Br>\n<Br>6. Para eliminar el grafo click en el boton rojo grafo</Br>\n<Br>7. Todos los nodos se pueden mover con el puntero del mouse click sostenido y arrastrar</Br>\n<Br>8. Al pasar el puntero sobre un nodo podras ver su nombre</Br>\n<Br>9. Con los botones de la parte derecha puedes ver informacion sobre la matriz de adyacencia, lazos y aristas</Br>\n<Br>10. En la parte inferior se presenta informacion general sobre el grafo</Br>\n<Br></Br>\n<Br></Br>\n<Br></Br>\n<Br></Br>\n<Br></Br>\n<Br></Br>\n<Br></Br>\n</html>");
        jButton1.setBorderPainted(false);
        jButton1.setContentAreaFilled(false);

        jLabel6.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("INGRESO DE DATOS");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 244, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(btnAleatorio, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnAgregarArista, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(10, 10, 10)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnEliminarArista, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnEliminarGrafo, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(txtEntrada, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addComponent(btnAgregarNodo, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(btnEliminarNodo, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(57, 57, 57)
                        .addComponent(jLabel6)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtEntrada, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnAgregarNodo, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnEliminarNodo, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnAgregarArista, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnEliminarArista, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnAleatorio, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnEliminarGrafo, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addContainerGap())
        );

        javax.swing.GroupLayout panelGrafoMatLayout = new javax.swing.GroupLayout(panelGrafoMat);
        panelGrafoMat.setLayout(panelGrafoMatLayout);
        panelGrafoMatLayout.setHorizontalGroup(
            panelGrafoMatLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelGrafoMatLayout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 232, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelGrafoMatLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelGrafoMatLayout.createSequentialGroup()
                        .addComponent(panelGrafo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(panelMatAdyacencia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        panelGrafoMatLayout.setVerticalGroup(
            panelGrafoMatLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(panelGrafoMatLayout.createSequentialGroup()
                .addGap(4, 4, 4)
                .addGroup(panelGrafoMatLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(panelGrafo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(panelMatAdyacencia, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(6, 6, 6)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelGrafoMat, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelGrafoMat, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * me agrega el un vertice al grafo y se visualiza el posicionamiento
     *
     * @param evt
     */
    private void btnAgregarNodoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarNodoActionPerformed
        try {
            // TODO add your handling code here:
            modelo.agregarVertice(txtEntrada.getText());
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, ex);
        }
        txtEntrada.setText("");
        txtEntrada.requestFocus();
        actualizarVertices();
        actualizarMatrizAristas();
        crearGrafo();
    }//GEN-LAST:event_btnAgregarNodoActionPerformed

    /**
     * al dar click agrega una arista al grafo
     *
     * @exception genera una excepcion si uno de los nodos no existe
     */
    private void btnAgregarAristaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarAristaActionPerformed
        // TODO add your handling code here:
        try {
            String a = txtEntrada.getText();
            txtEntrada.requestFocus();
            txtEntrada.setText("");
            int b = a.indexOf(":");
            if (a != " " && a != "" && a.contains(":")) {
                String cad1 = a.substring(0, b);
                String cad2 = a.substring(b + 1, a.length());
                modelo.agregarArista(cad1, cad2);
            } else {
                throw new Exception("Entrada no valida, vacia o falta ':' revise su entrada");
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, ex);
        }
        infGrafo.removeAll();
        modelo.mostrarAristasSimples(infGrafo);
        infGrafo.revalidate();
        actualizarVertices();
        actualizarMatrizAristas();
        crearGrafo();
    }//GEN-LAST:event_btnAgregarAristaActionPerformed

    /**
     * elimina todas las ocurrencia de una arista
     *
     * @param evt
     */
    private void btnEliminarAristaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarAristaActionPerformed
        // TODO add your handling code here:
        String name1 = txtEntrada.getText().substring(0, txtEntrada.getText().indexOf(":"));
        String name2 = txtEntrada.getText().substring(txtEntrada.getText().indexOf(":") + 1, txtEntrada.getText().length());
        modelo.eliminarArista(name1, name2);
        txtEntrada.requestFocus();
        txtEntrada.setText("");
        infGrafo.removeAll();
        modelo.mostrarAristasSimples(infGrafo);
        infGrafo.validate();
        actualizarVertices();
        actualizarMatrizAristas();
        crearGrafo();
    }//GEN-LAST:event_btnEliminarAristaActionPerformed

    /**
     * con este boton elimino el vertice que le indico en el txtfield
     *
     * @param evt
     */
    private void btnEliminarNodoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarNodoActionPerformed
        // TODO add your handling code here:
        String name = txtEntrada.getText();
        try {
            modelo.eliminarVertice(name);
        } catch (Exception ex) {
            Logger.getLogger(VentanaPrincipal.class.getName()).log(Level.SEVERE, null, ex);
        }
        modelo.imVertices();
        modelo.imprimirGrafo();
        txtEntrada.requestFocus();
        txtEntrada.setText("");
        actualizarVertices();
        actualizarMatrizAristas();
        infGrafo.removeAll();
        modelo.mostrarAristasSimples(infGrafo);
        infGrafo.revalidate();
        crearGrafo();
    }//GEN-LAST:event_btnEliminarNodoActionPerformed

    /**
     * con este boton se eliminan todos los vertices y aristas de un grafo
     *
     * @param evt
     */
    private void btnEliminarGrafoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarGrafoActionPerformed
        // TODO add your handling code here:
        int a = JOptionPane.showConfirmDialog(this, "Desea borrar", "Confirmacion", JOptionPane.YES_NO_OPTION);
        if (a == JOptionPane.YES_OPTION) {
            modelo.eliminarGrafo();
            actualizarVertices();
            actualizarMatrizAristas();
            crearGrafo();
            infGrafo.removeAll();
            infGrafo.validate();
        }
    }//GEN-LAST:event_btnEliminarGrafoActionPerformed

    private void btnAleatorioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAleatorioActionPerformed
        // TODO add your handling code here:
        try {
            if (!txtEntrada.getText().equals("")) {
                int n = Integer.parseInt(txtEntrada.getText());
                if (n > 0) {
                    modelo.crearGrafoAleatorio(n);
                    infGrafo.removeAll();
                    modelo.mostrarAristasSimples(infGrafo);
                    infGrafo.revalidate();
                }
            }
        } catch (Exception ex) {
            Logger.getLogger(VentanaPrincipal.class.getName()).log(Level.SEVERE, null, ex);
        }
        crearGrafo();
        actualizarVertices();
        actualizarMatrizAristas();
    }//GEN-LAST:event_btnAleatorioActionPerformed

    /**
     * nos muestra las Aristas simples que tiene un grafo
     *
     * @param evt
     */
    private void btnAristasSimplesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAristasSimplesActionPerformed
        // TODO add your handling code here:
        infGrafo.removeAll();
        modelo.mostrarAristasSimples(infGrafo);
        infGrafo.revalidate();
    }//GEN-LAST:event_btnAristasSimplesActionPerformed

    /**
     * Nos muestra las aristas multiples que tiene un grafo
     *
     * @param evt
     */
    private void btnAristasMultiplesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAristasMultiplesActionPerformed
        // TODO add your handling code here:
        infGrafo.removeAll();
        modelo.mostrarAristasMultiples(infGrafo);
        infGrafo.revalidate();
    }//GEN-LAST:event_btnAristasMultiplesActionPerformed

    /**
     * Nos muestrar los grados de los vertices
     *
     * @param evt
     */
    private void btnGradoVerticesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGradoVerticesActionPerformed
        // TODO add your handling code here:
        infGrafo.removeAll();
        Nodo aux = modelo.cab.sigfil;
        modelo.gradoVertices();
        while (aux != modelo.cab) {
            informacionGrafo panel = new informacionGrafo();
            panel.jLabel1.setText(aux.name);
            panel.jLabel2.setText("" + aux.info);
            panel.jLabel3.setText("GRADO");
            infGrafo.add(new JSeparator());
            infGrafo.add(panel);
            infGrafo.add(new JSeparator());
            aux = aux.sigfil;
        }
        infGrafo.revalidate();
    }//GEN-LAST:event_btnGradoVerticesActionPerformed

    /**
     * con este keyEvent todas las letras que escriba en el jtextField van a ser
     * mayusculas
     *
     * @param evt
     */
    private void txtEntradaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtEntradaKeyTyped
        // TODO add your handling code here:
        char c = evt.getKeyChar();
        if (Character.isLowerCase(c)) {
            String a = ("" + c).toUpperCase();
            c = a.charAt(0);
            evt.setKeyChar(c);
        }
    }//GEN-LAST:event_txtEntradaKeyTyped

    /**
     * Con este boton me muestra si hay lazos en el grafo
     *
     * @param evt
     */
    private void btnLazosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLazosActionPerformed
        // TODO add your handling code here:
        infGrafo.removeAll();
        modelo.mostrarLazos(infGrafo);
        infGrafo.revalidate();
    }//GEN-LAST:event_btnLazosActionPerformed

    
    /**
     * Metodo para crear los botones
     */
    public void crearNodos(){
        Nodo aux = modelo.cab.sigfil;
        while (aux != modelo.cab) {
            final String nombre = aux.name;
            final JButton vertice = new JButton("");
            vertice.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/cirnegro.png")));
            vertice.setBorder(null);
            vertice.setBorderPainted(false);
            vertice.setContentAreaFilled(false);
            vertice.setBounds(aux.posX, aux.posY, 30, 30);
            vertice.setToolTipText(nombre);
            final Nodo a = aux;
            vertice.addMouseMotionListener(new MouseAdapter() {
                public void mouseDragged(MouseEvent E) {
                    int X = E.getX() + vertice.getX();
                    int Y = E.getY() + vertice.getY();
                    if ((X >= 0 && X <= panelGrafo.getSize().width - 25) && (Y >= 10 && Y <= panelGrafo.getSize().height - 25)) {
                        vertice.setBounds(X, Y, 30, 30);
                        a.posX = X;
                        a.posY = Y;
                    }
                }
            });
            vertice.addMouseListener(new MouseListener() {
                @Override
                public void mouseClicked(MouseEvent me) {}
                @Override
                public void mousePressed(MouseEvent me) {}
                @Override
                public void mouseReleased(MouseEvent me) {
                    repaint();
                }
                @Override
                public void mouseEntered(MouseEvent me) {}
                @Override
                public void mouseExited(MouseEvent me) {}
            });
            panelGrafo.setLayout(null);
            panelGrafo.updateUI();
            panelGrafo.add(vertice, new org.netbeans.lib.awtextra.AbsoluteConstraints(vertice.getX(), vertice.getY(), 220, 30));
            aux = aux.sigfil;
        }
    }
    
    /**
     * generar etiquetas etiquetas
     */
    public void generarEtiquetas(){
        panelGrafo.add(lbTipoGrafo);
        if (modelo.esSimple()) {
            lbTipoGrafo.setText("GRAFO SIMPLE");
        } else {
            lbTipoGrafo.setText("GRAFO MULTIGRAFO");
        }
        if (modelo.teorema1()) {
            etqTeorema.setText("SE CUMPLE");
        } else {
            etqTeorema.setText("NO CUMPLE");
        }
        etqNumeroVertices.setText("" + modelo.contarVertices());
        etqNumeroAristas.setText("" + modelo.contarAristas());
        modelo.enc.clear();
        if(modelo.esConexo(modelo.cab.sigfil)){
            etqConexo.setText("VERDADERO");
        }else{
            etqConexo.setText("FALSO");
        }
    }
    
    /**
     * Este metodo me permite ir actualizando lo que realizo en la interfaz
     * Agrega un evento a los nodos para poder moverlos en el panelGrafo Si se
     * deja el cursor sobre el nodo podemos ver su nombre
     */
    public void crearGrafo() {
        panelGrafo.removeAll();
        generarEtiquetas();
        crearNodos();
        repaint();
    }

    /**
     * actualizar vertices de la matriz si agrego un vertice tengo que
     * actualizar la matriz
     */
    public void actualizarVertices() {
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        model.setColumnCount(0);
        model.setRowCount(modelo.contarVertices());
        model.addColumn("");
        Nodo aux = modelo.cab.sigfil;
        while (aux != modelo.cab) {
            model.addColumn(aux.name);
            jTable1.setValueAt(aux.name, aux.fil - 1, 0);
            aux = aux.sigfil;
        }
    }

    /**
     * Actualiza la matriz de adyacencia cada vez que agregamos una arista
     */
    public void actualizarMatrizAristas() {
        Nodo aux = modelo.cab.sigfil;
        while (aux != modelo.cab) {
            Nodo aux2 = aux.sigcol;
            while (aux2 != aux) {
                jTable1.setValueAt(aux2.info, aux2.fil - 1, aux2.col);
                aux2 = aux2.sigcol;
            }
            aux = aux.sigfil;
        }
    }

    /**
     * me genera colores aleatorios preferiblemente claros
     *
     * @return
     */
    public Color colorAleatorio() {
        Random rgb = new Random();
        int r = rgb.nextInt(230 - 110) + 110;
        int g = rgb.nextInt(230 - 110) + 110;
        int b = rgb.nextInt(230 - 110) + 110;
        return new Color(r, g, b);
    }

    /**
     * Este metodo nos dibuja todos los nodos y las aristas
     *
     * @param g
     */
    @Override
    public void paint(Graphics g) {
        super.paint(g);
        Graphics2D g2d = (Graphics2D) g;
        g2d.setStroke(new BasicStroke(4));
        Nodo aux = modelo.cab.sigfil;
        while (aux != modelo.cab) {
            Nodo aux2 = aux.sigcol;
            while (aux2 != aux) {
                g2d.setColor(colorAleatorio());
                if (aux2.col > aux2.fil) {
                    Nodo aux3 = modelo.horizontal(aux2.col, 0);
                    Point p1 = new Point(aux.posX + panelGrafo.getX() + 20, aux.posY + 50);
                    Point p2 = new Point(aux3.posX + panelGrafo.getX() + 20, aux3.posY + 50);
                    int c = 0;
                    while (c < aux2.info) {
                        if (c % 2 == 0) {
                            Point p3 = new Point(((p1.x + p2.x) / 2) + c * 30, ((p1.y + p2.y) / 2) + c * 30);
                            QuadCurve2D.Double a = new QuadCurve2D.Double(p1.x, p1.y, p3.x, p3.y, p2.x, p2.y);
                            g2d.draw(a);
                        } else {
                            Point p3 = new Point(((p1.x + p2.x) / 2) - c * 30, ((p1.y + p2.y) / 2) - c * 30);
                            QuadCurve2D.Double a = new QuadCurve2D.Double(p1.x, p1.y, p3.x, p3.y, p2.x, p2.y);
                            g2d.draw(a);
                        }
                        c++;
                    }
                }
                if (aux2.col == aux2.fil) {
                    g2d.drawArc(aux.posX + panelGrafo.getX() + 16, aux.posY + 20, 10, 50, 0, 180);
                }
                validate();
                aux2 = aux2.sigcol;
            }
            aux = aux.sigfil;
        }
        validate();
    }

    public Grafo modelo;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAgregarArista;
    private javax.swing.JButton btnAgregarNodo;
    private javax.swing.JButton btnAleatorio;
    private javax.swing.JButton btnAristasMultiples;
    private javax.swing.JButton btnAristasSimples;
    private javax.swing.JButton btnEliminarArista;
    private javax.swing.JButton btnEliminarGrafo;
    private javax.swing.JButton btnEliminarNodo;
    private javax.swing.JButton btnGradoVertices;
    private javax.swing.JButton btnLazos;
    private javax.swing.JLabel etqConexo;
    private javax.swing.JLabel etqNumeroAristas;
    private javax.swing.JLabel etqNumeroVertices;
    private javax.swing.JLabel etqTeorema;
    private javax.swing.Box.Filler filler1;
    private javax.swing.JPanel infGrafo;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel lb7;
    private javax.swing.JLabel lbTipoGrafo;
    private javax.swing.JPanel panelGrafo;
    private javax.swing.JPanel panelGrafoMat;
    private javax.swing.JPanel panelMatAdyacencia;
    private javax.swing.JScrollPane scrollPaneGrafo;
    private javax.swing.JTextField txtEntrada;
    // End of variables declaration//GEN-END:variables

}
